tsne = TSNE(n_components=2, init='random', random_state=177).fit(train_data)
df = pd.DataFrame(tsne.embedding_)
df['labels'] = kmeans.labels_
df1 = df[df['labels'] == 0]
df2 = df[df['labels'] == 1]
df3 = df[df['labels'] == 2]
df4 = df[df['labels'] == 3]
df5 = df[df['labels'] == 4]
df6 = df[df['labels'] == 5]
df7 = df[df['labels'] == 6]
df8 = df[df['labels'] == 7]
df9 = df[df['labels'] == 8]
df10 = df[df['labels'] == 9]
fig = plt.figure(figsize=(9, 6))
plt.plot(df1[0], df1[1], 'bo', df2[0], df2[1], 'r*', df3[0], df3[1], 'gD',
         df4[0], df4[1], 'ro', df5[0], df5[1], 'bD', df6[0], df6[1], 'g*',
         df7[0], df7[1], 'y*', df8[0], df8[1], 'go', df9[0], df9[1], 'rD',
         df10[0], df10[1], 'b*')
plt.show()



k = []
for index in range(len(i)):
    k.append([i[index], train_label[index]])
print(k)




SSE = []
for k in range(1, 60):
    kmeans = KMeans(n_clusters=k, max_iter=1000, tol=0.00000000000000000000000000000000000000000001, verbose=1)
    kmeans.fit(train_data)
    e = kmeans.predict(test_data)
    SSE.append(kmeans.inertia_)
plt.plot(range(1, 60), SSE, marker='o')  # marker添加折现上数值对应点
plt.show()




print(kmeans.labels_)
print(e)
dic_value = list(dic.values())
dic_key = list(dic.keys())
for ind in range(len(e)):
    e[ind] = dic_key[dic_value.index(e[ind])]
print(e)